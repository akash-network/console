/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/v1/alerts": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations["createAlert"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/v1/alerts/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["getAlert"];
    put?: never;
    post?: never;
    delete: operations["deleteAlert"];
    options?: never;
    head?: never;
    patch: operations["patchAlert"];
    trace?: never;
  };
  "/v1/contact-points": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations["createContactPoint"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/v1/contact-points/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["getContactPoint"];
    put?: never;
    post?: never;
    delete: operations["deleteContactPoint"];
    options?: never;
    head?: never;
    patch: operations["patchContactPoint"];
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    AlertCreateInput: {
      data:
        | {
            /** Format: uuid */
            userId: string;
            /** Format: uuid */
            contactPointId: string;
            /** @default true */
            enabled: boolean;
            summary: string;
            description: string;
            /** @enum {string} */
            type: "CHAIN_MESSAGE";
            conditions:
              | {
                  /** @enum {string} */
                  operator: "and";
                  value: {
                    operator: "eq" | "lt" | "gt" | "lte" | "gte";
                    field: string;
                    value: string | number | boolean;
                  }[];
                }
              | {
                  /** @enum {string} */
                  operator: "or";
                  value: {
                    operator: "eq" | "lt" | "gt" | "lte" | "gte";
                    field: string;
                    value: string | number | boolean;
                  }[];
                }
              | {
                  operator: "eq" | "lt" | "gt" | "lte" | "gte";
                  field: string;
                  value: string | number | boolean;
                };
          }
        | {
            /** Format: uuid */
            userId: string;
            /** Format: uuid */
            contactPointId: string;
            /** @default true */
            enabled: boolean;
            summary: string;
            description: string;
            /** @enum {string} */
            type: "DEPLOYMENT_BALANCE";
            conditions:
              | {
                  /** @enum {string} */
                  operator: "and";
                  value: {
                    operator: "eq" | "lt" | "gt" | "lte" | "gte";
                    /** @enum {string} */
                    field: "balance";
                    value: number;
                  }[];
                }
              | {
                  /** @enum {string} */
                  operator: "or";
                  value: {
                    operator: "eq" | "lt" | "gt" | "lte" | "gte";
                    /** @enum {string} */
                    field: "balance";
                    value: number;
                  }[];
                }
              | {
                  operator: "eq" | "lt" | "gt" | "lte" | "gte";
                  /** @enum {string} */
                  field: "balance";
                  value: number;
                };
            params: {
              dseq: string;
              owner: string;
            };
          };
    };
    AlertOutputResponse: {
      data:
        | {
            /** Format: uuid */
            userId: string;
            /** Format: uuid */
            contactPointId: string;
            enabled: boolean;
            summary: string;
            description: string;
            /** Format: uuid */
            id: string;
            status: string;
            createdAt: unknown;
            updatedAt: unknown;
            /** @enum {string} */
            type: "CHAIN_MESSAGE";
            conditions:
              | {
                  /** @enum {string} */
                  operator: "and";
                  value: {
                    operator: "eq" | "lt" | "gt" | "lte" | "gte";
                    field: string;
                    value: string | number | boolean;
                  }[];
                }
              | {
                  /** @enum {string} */
                  operator: "or";
                  value: {
                    operator: "eq" | "lt" | "gt" | "lte" | "gte";
                    field: string;
                    value: string | number | boolean;
                  }[];
                }
              | {
                  operator: "eq" | "lt" | "gt" | "lte" | "gte";
                  field: string;
                  value: string | number | boolean;
                };
          }
        | {
            /** Format: uuid */
            userId: string;
            /** Format: uuid */
            contactPointId: string;
            enabled: boolean;
            summary: string;
            description: string;
            /** Format: uuid */
            id: string;
            status: string;
            createdAt: unknown;
            updatedAt: unknown;
            /** @enum {string} */
            type: "DEPLOYMENT_BALANCE";
            conditions:
              | {
                  /** @enum {string} */
                  operator: "and";
                  value: {
                    operator: "eq" | "lt" | "gt" | "lte" | "gte";
                    /** @enum {string} */
                    field: "balance";
                    value: number;
                  }[];
                }
              | {
                  /** @enum {string} */
                  operator: "or";
                  value: {
                    operator: "eq" | "lt" | "gt" | "lte" | "gte";
                    /** @enum {string} */
                    field: "balance";
                    value: number;
                  }[];
                }
              | {
                  operator: "eq" | "lt" | "gt" | "lte" | "gte";
                  /** @enum {string} */
                  field: "balance";
                  value: number;
                };
            params: {
              dseq: string;
              owner: string;
            };
          };
    };
    AlertPatchInput: {
      data: {
        /** Format: uuid */
        userId?: string;
        /** Format: uuid */
        contactPointId?: string;
        /** @default true */
        enabled: boolean;
        summary?: string;
        description?: string;
        conditions?:
          | (
              | {
                  /** @enum {string} */
                  operator: "and";
                  value: {
                    operator: "eq" | "lt" | "gt" | "lte" | "gte";
                    field: string;
                    value: string | number | boolean;
                  }[];
                }
              | {
                  /** @enum {string} */
                  operator: "or";
                  value: {
                    operator: "eq" | "lt" | "gt" | "lte" | "gte";
                    field: string;
                    value: string | number | boolean;
                  }[];
                }
              | {
                  operator: "eq" | "lt" | "gt" | "lte" | "gte";
                  field: string;
                  value: string | number | boolean;
                }
            )
          | (
              | {
                  /** @enum {string} */
                  operator: "and";
                  value: {
                    operator: "eq" | "lt" | "gt" | "lte" | "gte";
                    /** @enum {string} */
                    field: "balance";
                    value: number;
                  }[];
                }
              | {
                  /** @enum {string} */
                  operator: "or";
                  value: {
                    operator: "eq" | "lt" | "gt" | "lte" | "gte";
                    /** @enum {string} */
                    field: "balance";
                    value: number;
                  }[];
                }
              | {
                  operator: "eq" | "lt" | "gt" | "lte" | "gte";
                  /** @enum {string} */
                  field: "balance";
                  value: number;
                }
            );
      };
    };
    ContactPointCreateInput: {
      data: {
        /** Format: uuid */
        userId: string;
        /** @enum {string} */
        type: "email";
        config: {
          addresses: string[];
        };
      };
    };
    ContactPointOutput: {
      data: {
        /** Format: uuid */
        userId: string;
        /** @enum {string} */
        type: "email";
        config: {
          addresses: string[];
        };
        /** Format: uuid */
        id: string;
        createdAt: unknown;
        updatedAt: unknown;
      };
    };
    ContactPointPatchInput: {
      data: {
        /** @enum {string} */
        type?: "email";
        config?: {
          addresses: string[];
        };
      };
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  createAlert: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AlertCreateInput"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AlertOutputResponse"];
        };
      };
    };
  };
  getAlert: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AlertOutputResponse"];
        };
      };
    };
  };
  deleteAlert: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AlertOutputResponse"];
        };
      };
    };
  };
  patchAlert: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AlertPatchInput"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AlertOutputResponse"];
        };
      };
    };
  };
  createContactPoint: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContactPointCreateInput"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ContactPointOutput"];
        };
      };
    };
  };
  getContactPoint: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ContactPointOutput"];
        };
      };
    };
  };
  deleteContactPoint: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ContactPointOutput"];
        };
      };
    };
  };
  patchContactPoint: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContactPointPatchInput"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ContactPointOutput"];
        };
      };
    };
  };
}
