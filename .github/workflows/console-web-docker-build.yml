name: Deploy Web CI

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]


jobs:
  build-deploy-web:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_CACHE_KEY: deploy-web-${{ github.sha }}
    outputs:
      deploy-web-image: ${{ env.DOCKER_IMAGE_CACHE_KEY }}
      skipped: ${{ steps.validation.outputs.enabled != 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: ./.github/actions/local-dependencies
        id: local_deps
        with:
          app: deploy-web

      # Check for changes in deploy-web folder
      - uses: dorny/paths-filter@v2
        id: has_changes
        with:
          filters: |
            local_deps: &local_deps ${{ steps.local_deps.outputs.deps_json }}
            deploy-web:
              - 'apps/deploy-web/**'
              - *local_deps

      - name: Decide whether to validate
        id: validation
        run: echo "enabled=${{ github.event_name == 'push' || steps.has_changes.outputs.deploy-web == 'true' }}" >> $GITHUB_OUTPUT

      - uses: ./.github/actions/setup-app-deps
        if: steps.validation.outputs.enabled == 'true'
        with:
          app: deploy-web

      - name: Run static code analysis
        if: steps.validation.outputs.enabled == 'true'
        run: npm run lint -w apps/deploy-web -- --quiet

      - name: Run tests
        if: steps.validation.outputs.enabled == 'true'
        run: npm run test:cov --workspace=apps/deploy-web

      - name: Upload Test Coverage
        if: steps.validation.outputs.enabled == 'true'
        uses: codecov/codecov-action@v5
        with:
          directory: ./apps/deploy-web/coverage
          flags: deploy-web
          token: ${{ secrets.CODECOV_TOKEN }}
          base_sha: ${{ github.event.pull_request.base.sha }}

      - name: Build the Docker image
        if: steps.validation.outputs.enabled == 'true' && github.event_name == 'pull_request'
        run: packages/docker/script/dc.sh build deploy-web --build-arg DEPLOYMENT_ENV=production
