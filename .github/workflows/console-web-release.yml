name: Release Deploy Web

on:
  push:
    branches:
      - main
    paths:
      - "apps/deploy-web/package.json"

jobs:
  release:
    name: Create Release
    uses: ./.github/workflows/reusable-create-github-release.yml
    secrets: inherit
    with:
      app: deploy-web

  build-beta:
    needs: release
    name: Build Beta Docker image
    uses: ./.github/workflows/reusable-build-image.yml
    secrets: inherit
    permissions:
      contents: write
      packages: write
    with:
      tag: ${{ needs.release.outputs.git_tag }}-beta
      deployment-env: staging

  deploy-beta:
    needs: build-beta
    name: Deploy to beta sandbox
    uses: ./.github/workflows/reusable-deploy-k8s.yml
    secrets: inherit
    with:
      app: console-web
      appVersion: ${{ needs.build-beta.outputs.base_image_tag }}
      environment: staging

  test-beta:
    runs-on: ubuntu-latest
    needs: deploy-beta
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-app-deps
        with:
          app: deploy-web
      - name: Install Playwright Dependencies
        run: npx playwright install-deps chromium
      - name: Cache Playwright browsers
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: deploy-web-playwright-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install Playwright Browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install chromium
      - name: Run e2e tests
        env:
          TEST_WALLET_MNEMONIC: ${{ secrets.CONSOLE_WEB_E2E_TEST_WALLET_MNEMONIC }}
          BASE_URL: ${{ vars.CONSOLE_WEB_BETA_URL }}
        run: npm run test:e2e --workspace=apps/deploy-web
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: apps/deploy-web/playwright-report/
          retention-days: 1
      - name: Show Test Summary
        run: |
          echo "### 📝 E2E Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "📄 [Download Playwright Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY

  build-prod:
    needs: release
    name: Build Prod Docker image
    uses: ./.github/workflows/reusable-build-image.yml
    secrets: inherit
    permissions:
      contents: write
      packages: write
    with:
      tag: ${{ needs.release.outputs.git_tag }}
      deployment-env: production
