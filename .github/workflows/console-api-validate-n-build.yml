name: API CI

on:
  pull_request:
    branches: ["main"]
    paths:
      - "apps/api/**"
      - "packages/**"
  push:
    branches: ["main"]
    paths:
      - "apps/api/**"
      - "packages/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  should-validate:
    name: Decide Whether to Validate
    uses: ./.github/workflows/reusable-should-validate.yml
    with:
      app: api

  validate-api:
    runs-on: ubuntu-latest
    needs: should-validate
    if: needs.should-validate.outputs.enabled == 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: ./.github/actions/setup-app-deps
        with:
          app: api

      - name: Run static code analysis
        if: github.event_name == 'pull_request'
        run: npm run lint -w apps/api -- --quiet

      - name: Run tests
        env:
          POSTGRES_SKIP_IMPORT: true
        run: |
          npm run dc:up:db
          npm run test:cov --workspace=apps/api
          npm run dc:down

      - name: Upload Test Coverage
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          directory: ./apps/api/coverage
          flags: api
          token: ${{ secrets.CODECOV_TOKEN }}

  test-api-build:
    runs-on: ubuntu-latest
    needs: should-validate
    if: needs.should-validate.outputs.has_changes == 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build the Docker image for API
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
        run: packages/docker/script/dc.sh build api
