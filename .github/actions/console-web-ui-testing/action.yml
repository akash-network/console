name: Console Web UI testing
description: Runs UI tests for Console Web

inputs:
  url:
    description: Base URL to Console Web
    required: true
  test-wallet-mnemonic:
    description: Test wallet mnemonic
    required: true
  slack-webhook-url:
    description: Slack webhook URL
    required: true
  gh-user-to-slack-user:
    description: GitHub user to Slack user mapping
    required: false
    default: "{}"
  doppler-token:
    description: Doppler token for GH actions
    required: true
  ui-tests-token-name:
    description: Name of env variable for the UI tests token
    required: true


runs:
  using: "composite"
  steps:
    - uses: ./.github/actions/setup-app-deps
      with:
        app: deploy-web
    - name: Install Playwright Dependencies
      shell: bash
      run: npx playwright install-deps chromium
    - name: Cache Playwright browsers
      id: cache-playwright
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright
        key: deploy-web-playwright-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
    - name: Install Playwright Browsers
      if: steps.cache-playwright.outputs.cache-hit != 'true'
      shell: bash
      run: npx playwright install chromium
    - name: Install Doppler CLI
      uses: dopplerhq/cli-action@v3
    - name: Get UI Tests Token
      id: get-ui-tests-token
      env:
        DOPPLER_TOKEN: ${{ inputs.doppler-token }}
      run: |
        ui_tests_token=$(doppler secrets get ${{ inputs.ui-tests-token-name }} --project=console-web --plain)
        echo "token=${ui_tests_token}" >> $GITHUB_OUTPUT
    - name: Run e2e tests
      id: e2e-tests
      env:
        TEST_WALLET_MNEMONIC: ${{ inputs.test-wallet-mnemonic }}
        BASE_URL: ${{ inputs.url }}
        UI_TESTS_TOKEN: ${{ steps.get-ui-tests-token.outputs.token }}
      shell: bash
      continue-on-error: true
      run: npm run test:e2e --workspace=apps/deploy-web
    - uses: actions/upload-artifact@v4
      id: playwright-report
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: apps/deploy-web/playwright-report/
        retention-days: 5

    - uses: actions/github-script@v7
      if: steps.e2e-tests.outcome == 'failure'
      id: associated-pr
      env:
        GH_USER_TO_SLACK_USER: ${{ inputs.gh-user-to-slack-user }}
      with:
        script: |
          let pr = context.payload.pull_request;
          if (!pr) {
            const response = (
              await github.rest.repos.listPullRequestsAssociatedWithCommit({
                commit_sha: context.sha,
                owner: context.repo.owner,
                repo: context.repo.repo,
              })
            );
            pr = response.data[0];
          }

          core.setOutput('number', pr.number);
          core.setOutput('title', pr.title);

          const author = pr.merged_by?.login || pr.user.login;
          core.setOutput('author', author);

          const userMapping = JSON.parse(process.env.GH_USER_TO_SLACK_USER || '{}');
          core.setOutput('slack-user', userMapping[author] || "");

    - name: DEBUG
      env:
        PR_DETAILS: ${{ toJson(github.event.pull_request) }}
      run: echo "$PR_DETAILS"

    - name: Notify in Slack if tests failed
      if: steps.e2e-tests.outcome == 'failure'
      uses: slackapi/slack-github-action@v2.0.0
      with:
        webhook-type: incoming-webhook
        webhook: ${{ inputs.slack-webhook-url }}
        payload: |
          blocks:
            - type: "header"
              text:
                type: "plain_text"
                text: "UI tests failed on beta"
            - type: "section"
              text:
                type: "mrkdwn"
                text: |
                  *Website:* ${{ inputs.url }}
                  *Workflow:* ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
                  *Associated PR:* <${{ github.server_url }}/${{ github.repository }}/pull/${{ steps.associated-pr.outputs.number }}|${{ steps.associated-pr.outputs.title }}>
                  *Author:* ${{ steps.associated-pr.outputs.slack-user != '' && format('<@{0}>', steps.associated-pr.outputs.slack-user) || steps.associated-pr.outputs.author }}

    - name: Summarize Test Results
      shell: bash
      run: |
        echo "### 📝 E2E Test Summary" >> $GITHUB_STEP_SUMMARY
        prefix=":white_check_mark: Passed"
        if [ "${{ steps.e2e-tests.outcome }}" == "failure" ]; then
          prefix=":x: Failed"
        fi
        echo "${prefix}, [download tests report](${{ steps.playwright-report.outputs.artifact-url }})" >> $GITHUB_STEP_SUMMARY

        if [ "${{ steps.e2e-tests.outcome }}" == "failure" ]; then
          exit 1;
        fi
