[
  {
    "title": "LinuxServer",
    "templateSources": [
      {
        "name": "AdGuardHome Sync",
        "path": "adguardhome-sync",
        "repoOwner": "cryptoandcoffee",
        "repoName": "akash-linuxserver",
        "repoVersion": "cached-sha"
      },
      {
        "name": "Airsonic",
        "path": "airsonic",
        "repoOwner": "cryptoandcoffee",
        "repoName": "akash-linuxserver",
        "repoVersion": "cached-sha"
      },
      {
        "name": "Airsonic Advanced",
        "path": "airsonic-advanced",
        "repoOwner": "cryptoandcoffee",
        "repoName": "akash-linuxserver",
        "repoVersion": "cached-sha"
      }
    ],
    "templates": [
      {
        "id": "cryptoandcoffee-akash-linuxserver-adguardhome-sync",
        "name": "AdGuardHome Sync",
        "path": "cryptoandcoffee-akash-linuxserver-adguardhome-sync",
        "logoUrl": "",
        "summary": "[[[[[[[The LinuxServer.io team brings you another container release featuring:\n\nregular and timely application updates\neasy user mappings (PGID, PUID)\ncustom base image with s6 overlay\nweekly base...",
        "config": {
          "ssh": false,
          "logoUrl": ""
        },
        "readme": "<!-- DO NOT EDIT THIS FILE MANUALLY  -->\n<!-- Please read the https://github.com/linuxserver/docker-adguardhome-sync/blob/main/.github/CONTRIBUTING.md -->\n\n[![linuxserver.io](https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver_medium.png)](https://linuxserver.io)\n\n[![Blog](https://img.shields.io/static/v1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=Blog)](https://blog.linuxserver.io \"all the things you can do with our containers including How-To guides, opinions and much more!\")\n[![Discord](https://img.shields.io/discord/354974912613449730.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=Discord&logo=discord)](https://discord.gg/YWrKVTn \"realtime support / chat with the community and the team.\")\n[![Discourse](https://img.shields.io/discourse/https/discourse.linuxserver.io/topics.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&logo=discourse)](https://discourse.linuxserver.io \"post on our community forum.\")\n[![Fleet](https://img.shields.io/static/v1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=Fleet)](https://fleet.linuxserver.io \"an online web interface which displays all of our maintained images.\")\n[![GitHub](https://img.shields.io/static/v1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=GitHub&logo=github)](https://github.com/linuxserver \"view the source for all of our repositories.\")\n[![Open Collective](https://img.shields.io/opencollective/all/linuxserver.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=Supporters&logo=open%20collective)](https://opencollective.com/linuxserver \"please consider helping us by either donating or contributing to our budget\")\n\nThe [LinuxServer.io](https://linuxserver.io) team brings you another container release featuring:\n\n* regular and timely application updates\n* easy user mappings (PGID, PUID)\n* custom base image with s6 overlay\n* weekly base OS updates with common layers across the entire LinuxServer.io ecosystem to minimise space usage, down time and bandwidth\n* regular security updates\n\nFind us at:\n\n* [Blog](https://blog.linuxserver.io) - all the things you can do with our containers including How-To guides, opinions and much more!\n* [Discord](https://discord.gg/YWrKVTn) - realtime support / chat with the community and the team.\n* [Discourse](https://discourse.linuxserver.io) - post on our community forum.\n* [Fleet](https://fleet.linuxserver.io) - an online web interface which displays all of our maintained images.\n* [GitHub](https://github.com/linuxserver) - view the source for all of our repositories.\n* [Open Collective](https://opencollective.com/linuxserver) - please consider helping us by either donating or contributing to our budget\n\n# [linuxserver/adguardhome-sync](https://github.com/linuxserver/docker-adguardhome-sync)\n\n[![Scarf.io pulls](https://scarf.sh/installs-badge/linuxserver-ci/linuxserver%2Fadguardhome-sync?color=94398d&label-color=555555&logo-color=ffffff&style=for-the-badge&package-type=docker)](https://scarf.sh/gateway/linuxserver-ci/docker/linuxserver%2Fadguardhome-sync)\n[![GitHub Stars](https://img.shields.io/github/stars/linuxserver/docker-adguardhome-sync.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&logo=github)](https://github.com/linuxserver/docker-adguardhome-sync)\n[![GitHub Release](https://img.shields.io/github/release/linuxserver/docker-adguardhome-sync.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&logo=github)](https://github.com/linuxserver/docker-adguardhome-sync/releases)\n[![GitHub Package Repository](https://img.shields.io/static/v1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=GitHub%20Package&logo=github)](https://github.com/linuxserver/docker-adguardhome-sync/packages)\n[![GitLab Container Registry](https://img.shields.io/static/v1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=GitLab%20Registry&logo=gitlab)](https://gitlab.com/linuxserver.io/docker-adguardhome-sync/container_registry)\n[![Quay.io](https://img.shields.io/static/v1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=Quay.io)](https://quay.io/repository/linuxserver.io/adguardhome-sync)\n[![Docker Pulls](https://img.shields.io/docker/pulls/linuxserver/adguardhome-sync.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=pulls&logo=docker)](https://hub.docker.com/r/linuxserver/adguardhome-sync)\n[![Docker Stars](https://img.shields.io/docker/stars/linuxserver/adguardhome-sync.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=stars&logo=docker)](https://hub.docker.com/r/linuxserver/adguardhome-sync)\n[![Jenkins Build](https://img.shields.io/jenkins/build?labelColor=555555&logoColor=ffffff&style=for-the-badge&jobUrl=https%3A%2F%2Fci.linuxserver.io%2Fjob%2FDocker-Pipeline-Builders%2Fjob%2Fdocker-adguardhome-sync%2Fjob%2Fmain%2F&logo=jenkins)](https://ci.linuxserver.io/job/Docker-Pipeline-Builders/job/docker-adguardhome-sync/job/main/)\n[![LSIO CI](https://img.shields.io/badge/dynamic/yaml?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=CI&query=CI&url=https%3A%2F%2Fci-tests.linuxserver.io%2Flinuxserver%2Fadguardhome-sync%2Flatest%2Fci-status.yml)](https://ci-tests.linuxserver.io/linuxserver/adguardhome-sync/latest/index.html)\n\n[Adguardhome-sync](https://github.com/bakito/adguardhome-sync/) is a tool to synchronize AdGuardHome config to replica instances.\n\n[![adguardhome-sync](https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/adguardhomesync-icon.png)](https://github.com/bakito/adguardhome-sync/)\n\n## Supported Architectures\n\nWe utilise the docker manifest for multi-platform awareness. More information is available from docker [here](https://github.com/docker/distribution/blob/master/docs/spec/manifest-v2-2.md#manifest-list) and our announcement [here](https://blog.linuxserver.io/2019/02/21/the-lsio-pipeline-project/).\n\nSimply pulling `lscr.io/linuxserver/adguardhome-sync:latest` should retrieve the correct image for your arch, but you can also pull specific arch images via tags.\n\nThe architectures supported by this image are:\n\n| Architecture | Available | Tag |\n| :----: | :----: | ---- |\n| x86-64 | ✅ | amd64-\\<version tag\\> |\n| arm64 | ✅ | arm64v8-\\<version tag\\> |\n| armhf | ❌ | |\n\n## Version Tags\n\nThis image provides various versions that are available via tags. Please read the descriptions carefully and exercise caution when using unstable or development tags.\n\n| Tag | Available | Description |\n| :----: | :----: |--- |\n| latest | ✅ | Stable releases from GitHub |\n## Application Setup\n\nEdit the adguardhome-sync.yaml with your AdGuardHome instance details, for more information check out [AdGuardHome Sync](https://github.com/bakito/adguardhome-sync/).\n\n## Usage\n\nHere are some example snippets to help you get started creating a container.\n\n### docker-compose (recommended, [click here for more info](https://docs.linuxserver.io/general/docker-compose))\n\n```yaml\n---\nversion: \"2.1\"\nservices:\n  adguardhome-sync:\n    image: lscr.io/linuxserver/adguardhome-sync:latest\n    container_name: adguardhome-sync\n    environment:\n      - PUID=1000\n      - PGID=1000\n      - TZ=Etc/UTC\n      - CONFIGFILE=/config/adguardhome-sync.yaml #optional\n    volumes:\n      - /path/to/appdata/config:/config\n    ports:\n      - 8080:8080\n    restart: unless-stopped\n```\n\n### docker cli ([click here for more info](https://docs.docker.com/engine/reference/commandline/cli/))\n\n```bash\ndocker run -d \\\n  --name=adguardhome-sync \\\n  -e PUID=1000 \\\n  -e PGID=1000 \\\n  -e TZ=Etc/UTC \\\n  -e CONFIGFILE=/config/adguardhome-sync.yaml `#optional` \\\n  -p 8080:8080 \\\n  -v /path/to/appdata/config:/config \\\n  --restart unless-stopped \\\n  lscr.io/linuxserver/adguardhome-sync:latest\n\n```\n\n## Parameters\n\nContainer images are configured using parameters passed at runtime (such as those above). These parameters are separated by a colon and indicate `<external>:<internal>` respectively. For example, `-p 8080:80` would expose port `80` from inside the container to be accessible from the host's IP on port `8080` outside the container.\n\n| Parameter | Function |\n| :----: | --- |\n| `-p 8080` | Port for AdGuardHome Sync's web API. |\n| `-e PUID=1000` | for UserID - see below for explanation |\n| `-e PGID=1000` | for GroupID - see below for explanation |\n| `-e TZ=Etc/UTC` | specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List). |\n| `-e CONFIGFILE=/config/adguardhome-sync.yaml` | Set a custom config file. |\n| `-v /config` | Contains all relevant configuration files. |\n\n## Environment variables from files (Docker secrets)\n\nYou can set any environment variable from a file by using a special prepend `FILE__`.\n\nAs an example:\n\n```bash\n-e FILE__PASSWORD=/run/secrets/mysecretpassword\n```\n\nWill set the environment variable `PASSWORD` based on the contents of the `/run/secrets/mysecretpassword` file.\n\n## Umask for running applications\n\nFor all of our images we provide the ability to override the default umask settings for services started within the containers using the optional `-e UMASK=022` setting.\nKeep in mind umask is not chmod it subtracts from permissions based on it's value it does not add. Please read up [here](https://en.wikipedia.org/wiki/Umask) before asking for support.\n\n## User / Group Identifiers\n\nWhen using volumes (`-v` flags) permissions issues can arise between the host OS and the container, we avoid this issue by allowing you to specify the user `PUID` and group `PGID`.\n\nEnsure any volume directories on the host are owned by the same user you specify and any permissions issues will vanish like magic.\n\nIn this instance `PUID=1000` and `PGID=1000`, to find yours use `id user` as below:\n\n```bash\n  $ id username\n    uid=1000(dockeruser) gid=1000(dockergroup) groups=1000(dockergroup)\n```\n\n## Docker Mods\n\n[![Docker Mods](https://img.shields.io/badge/dynamic/yaml?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=adguardhome-sync&query=%24.mods%5B%27adguardhome-sync%27%5D.mod_count&url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml)](https://mods.linuxserver.io/?mod=adguardhome-sync \"view available mods for this container.\") [![Docker Universal Mods](https://img.shields.io/badge/dynamic/yaml?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=universal&query=%24.mods%5B%27universal%27%5D.mod_count&url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml)](https://mods.linuxserver.io/?mod=universal \"view available universal mods.\")\n\nWe publish various [Docker Mods](https://github.com/linuxserver/docker-mods) to enable additional functionality within the containers. The list of Mods available for this image (if any) as well as universal mods that can be applied to any one of our images can be accessed via the dynamic badges above.\n\n## Support Info\n\n* Shell access whilst the container is running: `docker exec -it adguardhome-sync /bin/bash`\n* To monitor the logs of the container in realtime: `docker logs -f adguardhome-sync`\n* container version number\n  * `docker inspect -f '{{ index .Config.Labels \"build_version\" }}' adguardhome-sync`\n* image version number\n  * `docker inspect -f '{{ index .Config.Labels \"build_version\" }}' lscr.io/linuxserver/adguardhome-sync:latest`\n\n## Updating Info\n\nMost of our images are static, versioned, and require an image update and container recreation to update the app inside. With some exceptions (ie. nextcloud, plex), we do not recommend or support updating apps inside the container. Please consult the [Application Setup](https://github.com/cryptoandcoffee/akash-linuxserver/blob/cached-sha/adguardhome-sync/#application-setup) section above to see if it is recommended for the image.\n\nBelow are the instructions for updating containers:\n\n### Via Docker Compose\n\n* Update all images: `docker-compose pull`\n  * or update a single image: `docker-compose pull adguardhome-sync`\n* Let compose update all containers as necessary: `docker-compose up -d`\n  * or update a single container: `docker-compose up -d adguardhome-sync`\n* You can also remove the old dangling images: `docker image prune`\n\n### Via Docker Run\n\n* Update the image: `docker pull lscr.io/linuxserver/adguardhome-sync:latest`\n* Stop the running container: `docker stop adguardhome-sync`\n* Delete the container: `docker rm adguardhome-sync`\n* Recreate a new container with the same docker run parameters as instructed above (if mapped correctly to a host folder, your `/config` folder and settings will be preserved)\n* You can also remove the old dangling images: `docker image prune`\n\n### Via Watchtower auto-updater (only use if you don't remember the original parameters)\n\n* Pull the latest image at its tag and replace it with the same env variables in one run:\n\n  ```bash\n  docker run --rm \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  containrrr/watchtower \\\n  --run-once adguardhome-sync\n  ```\n\n* You can also remove the old dangling images: `docker image prune`\n\n**Note:** We do not endorse the use of Watchtower as a solution to automated updates of existing Docker containers. In fact we generally discourage automated updates. However, this is a useful tool for one-time manual updates of containers where you have forgotten the original parameters. In the long term, we highly recommend using [Docker Compose](https://docs.linuxserver.io/general/docker-compose).\n\n### Image Update Notifications - Diun (Docker Image Update Notifier)\n\n* We recommend [Diun](https://crazymax.dev/diun/) for update notifications. Other tools that automatically update containers unattended are not recommended or supported.\n\n## Building locally\n\nIf you want to make local modifications to these images for development purposes or just to customize the logic:\n\n```bash\ngit clone https://github.com/linuxserver/docker-adguardhome-sync.git\ncd docker-adguardhome-sync\ndocker build \\\n  --no-cache \\\n  --pull \\\n  -t lscr.io/linuxserver/adguardhome-sync:latest .\n```\n\nThe ARM variants can be built on x86_64 hardware using `multiarch/qemu-user-static`\n\n```bash\ndocker run --rm --privileged multiarch/qemu-user-static:register --reset\n```\n\nOnce registered you can define the dockerfile to use with `-f Dockerfile.aarch64`.\n\n## Versions\n\n* **11.06.23:** - Rebase to Alpine 3.18, deprecate armhf.\n* **07.02.23:** - Rebase to Alpine 3.17, update amd64 artifact name.\n* **03.10.22:** - Rebase to Alpine 3.16, migrate to s6v3.\n* **18.12.21:** - Rebase to Alpine 3.15.\n* **09.08.21:** - Rebase to Alpine 3.14.\n* **08.04.21:** - Initial Release.\n",
        "deploy": "version: \"2.0\"\n\nservices:\n  adguardhome-sync:\n    image: linuxserver/adguardhome-sync\n    expose:\n      - port: 8080\n        as: 8080\n        to:\n          - global: true\n      - port: 80\n        as: 80\n        to:\n          - global: true\n\n    env:\n      - CONFIGFILE=/config/adguardhome-sync.yaml\n      - PASSWORD=01c166aa501a8ea9f61a3d86028fcafb\n      - PGID=1000\n      - PUID=1000\n      - TZ=Etc/UTC\n\nprofiles:\n  compute:\n    adguardhome-sync:\n      resources:\n        cpu:\n          units: 4.0\n        memory:\n          size: 2.5Gi\n        storage:\n          size: 32Gi\n  placement:\n    akash:\n      signedBy:\n        anyOf:\n          - \"akash1365yvmc4s7awdyj3n2sav7xfx76adc6dnmlx63\"\n          - \"akash18qa2a2ltfyvkyj0ggj3hkvuj6twzyumuaru9s4\"\n      pricing:\n        adguardhome-sync:\n          denom: uakt\n          amount: 100000\ndeployment:\n  adguardhome-sync:\n    akash:\n      profile: adguardhome-sync\n      count: 1\n",
        "persistentStorageEnabled": false,
        "githubUrl": "https://github.com/cryptoandcoffee/akash-linuxserver/blob/cached-sha/adguardhome-sync"
      },
      {
        "id": "cryptoandcoffee-akash-linuxserver-airsonic-advanced",
        "name": "Airsonic Advanced",
        "path": "cryptoandcoffee-akash-linuxserver-airsonic-advanced",
        "logoUrl": "",
        "summary": "[[[[[[[The LinuxServer.io team brings you another container release featuring:\n\nregular and timely application updates\neasy user mappings (PGID, PUID)\ncustom base image with s6 overlay\nweekly base...",
        "config": {
          "ssh": false,
          "logoUrl": ""
        },
        "readme": "<!-- DO NOT EDIT THIS FILE MANUALLY  -->\n<!-- Please read the https://github.com/linuxserver/docker-airsonic-advanced/blob/master/.github/CONTRIBUTING.md -->\n\n[![linuxserver.io](https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver_medium.png)](https://linuxserver.io)\n\n[![Blog](https://img.shields.io/static/v1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=Blog)](https://blog.linuxserver.io \"all the things you can do with our containers including How-To guides, opinions and much more!\")\n[![Discord](https://img.shields.io/discord/354974912613449730.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=Discord&logo=discord)](https://discord.gg/YWrKVTn \"realtime support / chat with the community and the team.\")\n[![Discourse](https://img.shields.io/discourse/https/discourse.linuxserver.io/topics.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&logo=discourse)](https://discourse.linuxserver.io \"post on our community forum.\")\n[![Fleet](https://img.shields.io/static/v1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=Fleet)](https://fleet.linuxserver.io \"an online web interface which displays all of our maintained images.\")\n[![GitHub](https://img.shields.io/static/v1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=GitHub&logo=github)](https://github.com/linuxserver \"view the source for all of our repositories.\")\n[![Open Collective](https://img.shields.io/opencollective/all/linuxserver.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=Supporters&logo=open%20collective)](https://opencollective.com/linuxserver \"please consider helping us by either donating or contributing to our budget\")\n\nThe [LinuxServer.io](https://linuxserver.io) team brings you another container release featuring:\n\n* regular and timely application updates\n* easy user mappings (PGID, PUID)\n* custom base image with s6 overlay\n* weekly base OS updates with common layers across the entire LinuxServer.io ecosystem to minimise space usage, down time and bandwidth\n* regular security updates\n\nFind us at:\n\n* [Blog](https://blog.linuxserver.io) - all the things you can do with our containers including How-To guides, opinions and much more!\n* [Discord](https://discord.gg/YWrKVTn) - realtime support / chat with the community and the team.\n* [Discourse](https://discourse.linuxserver.io) - post on our community forum.\n* [Fleet](https://fleet.linuxserver.io) - an online web interface which displays all of our maintained images.\n* [GitHub](https://github.com/linuxserver) - view the source for all of our repositories.\n* [Open Collective](https://opencollective.com/linuxserver) - please consider helping us by either donating or contributing to our budget\n\n# [linuxserver/airsonic-advanced](https://github.com/linuxserver/docker-airsonic-advanced)\n\n[![Scarf.io pulls](https://scarf.sh/installs-badge/linuxserver-ci/linuxserver%2Fairsonic-advanced?color=94398d&label-color=555555&logo-color=ffffff&style=for-the-badge&package-type=docker)](https://scarf.sh/gateway/linuxserver-ci/docker/linuxserver%2Fairsonic-advanced)\n[![GitHub Stars](https://img.shields.io/github/stars/linuxserver/docker-airsonic-advanced.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&logo=github)](https://github.com/linuxserver/docker-airsonic-advanced)\n[![GitHub Release](https://img.shields.io/github/release/linuxserver/docker-airsonic-advanced.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&logo=github)](https://github.com/linuxserver/docker-airsonic-advanced/releases)\n[![GitHub Package Repository](https://img.shields.io/static/v1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=GitHub%20Package&logo=github)](https://github.com/linuxserver/docker-airsonic-advanced/packages)\n[![GitLab Container Registry](https://img.shields.io/static/v1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=GitLab%20Registry&logo=gitlab)](https://gitlab.com/linuxserver.io/docker-airsonic-advanced/container_registry)\n[![Quay.io](https://img.shields.io/static/v1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=Quay.io)](https://quay.io/repository/linuxserver.io/airsonic-advanced)\n[![Docker Pulls](https://img.shields.io/docker/pulls/linuxserver/airsonic-advanced.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=pulls&logo=docker)](https://hub.docker.com/r/linuxserver/airsonic-advanced)\n[![Docker Stars](https://img.shields.io/docker/stars/linuxserver/airsonic-advanced.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=stars&logo=docker)](https://hub.docker.com/r/linuxserver/airsonic-advanced)\n[![Jenkins Build](https://img.shields.io/jenkins/build?labelColor=555555&logoColor=ffffff&style=for-the-badge&jobUrl=https%3A%2F%2Fci.linuxserver.io%2Fjob%2FDocker-Pipeline-Builders%2Fjob%2Fdocker-airsonic-advanced%2Fjob%2Fmaster%2F&logo=jenkins)](https://ci.linuxserver.io/job/Docker-Pipeline-Builders/job/docker-airsonic-advanced/job/master/)\n[![LSIO CI](https://img.shields.io/badge/dynamic/yaml?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=CI&query=CI&url=https%3A%2F%2Fci-tests.linuxserver.io%2Flinuxserver%2Fairsonic-advanced%2Flatest%2Fci-status.yml)](https://ci-tests.linuxserver.io/linuxserver/airsonic-advanced/latest/index.html)\n\n[Airsonic-advanced](https://github.com/airsonic-advanced/airsonic-advanced) is a free, web-based media streamer, providing ubiquitious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.\n\n[![airsonic-advanced](https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/airsonic-banner.png)](https://github.com/airsonic-advanced/airsonic-advanced)\n\n## Supported Architectures\n\nWe utilise the docker manifest for multi-platform awareness. More information is available from docker [here](https://github.com/docker/distribution/blob/master/docs/spec/manifest-v2-2.md#manifest-list) and our announcement [here](https://blog.linuxserver.io/2019/02/21/the-lsio-pipeline-project/).\n\nSimply pulling `lscr.io/linuxserver/airsonic-advanced:latest` should retrieve the correct image for your arch, but you can also pull specific arch images via tags.\n\nThe architectures supported by this image are:\n\n| Architecture | Available | Tag |\n| :----: | :----: | ---- |\n| x86-64 | ✅ | amd64-\\<version tag\\> |\n| arm64 | ✅ | arm64v8-\\<version tag\\> |\n| armhf | ❌ | |\n\n## Application Setup\n\nWe don't formally support upgrading from Airsonic to Airsonic Advanced, it may or may not work for you and we'd recommend making backups before attempting this. Following the upgrade you may experience a forced rescan of your library so take this into account if you have a lot of files.\n\nPlease see notes about upgrading from v10 to v11 [here](https://github.com/airsonic-advanced/airsonic-advanced#usage)\n\nAccess WebUI at `<your-ip>:4040`.\n\nDefault user/pass is admin/admin\n\nExtra java options can be passed with the JAVA_OPTS environment variable, eg `-e JAVA_OPTS=\"-Xmx256m -Xms256m\"`. For some reverse proxies, you may need to pass `JAVA_OPTS=-Dserver.use-forward-headers=true` for airsonic to generate the proper URL schemes.\n\nNote that if you want to use [Airsonic's Java jukebox player](https://airsonic.github.io/docs/jukebox/), then `PGID` will need to match the group of your sound device (e.g. `/dev/snd`).\n\n## Usage\n\nHere are some example snippets to help you get started creating a container.\n\n### docker-compose (recommended, [click here for more info](https://docs.linuxserver.io/general/docker-compose))\n\n```yaml\n---\nversion: \"2.1\"\nservices:\n  airsonic-advanced:\n    image: lscr.io/linuxserver/airsonic-advanced:latest\n    container_name: airsonic-advanced\n    environment:\n      - PUID=1000\n      - PGID=1000\n      - TZ=Etc/UTC\n      - CONTEXT_PATH= #optional\n      - JAVA_OPTS= #optional\n    volumes:\n      - /path/to/config:/config\n      - /path/to/music:/music\n      - /path/to/playlists:/playlists\n      - /path/to/podcasts:/podcasts\n      - /path/to/other media:/media #optional\n    ports:\n      - 4040:4040\n    devices:\n      - /dev/snd:/dev/snd #optional\n    restart: unless-stopped\n```\n\n### docker cli ([click here for more info](https://docs.docker.com/engine/reference/commandline/cli/))\n\n```bash\ndocker run -d \\\n  --name=airsonic-advanced \\\n  -e PUID=1000 \\\n  -e PGID=1000 \\\n  -e TZ=Etc/UTC \\\n  -e CONTEXT_PATH= `#optional` \\\n  -e JAVA_OPTS= `#optional` \\\n  -p 4040:4040 \\\n  -v /path/to/config:/config \\\n  -v /path/to/music:/music \\\n  -v /path/to/playlists:/playlists \\\n  -v /path/to/podcasts:/podcasts \\\n  -v /path/to/other media:/media `#optional` \\\n  --device /dev/snd:/dev/snd `#optional` \\\n  --restart unless-stopped \\\n  lscr.io/linuxserver/airsonic-advanced:latest\n\n```\n\n## Parameters\n\nContainer images are configured using parameters passed at runtime (such as those above). These parameters are separated by a colon and indicate `<external>:<internal>` respectively. For example, `-p 8080:80` would expose port `80` from inside the container to be accessible from the host's IP on port `8080` outside the container.\n\n| Parameter | Function |\n| :----: | --- |\n| `-p 4040` | WebUI |\n| `-e PUID=1000` | for UserID - see below for explanation |\n| `-e PGID=1000` | for GroupID - see below for explanation |\n| `-e TZ=Etc/UTC` | specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List). |\n| `-e CONTEXT_PATH=` | For setting url-base in reverse proxy setups. |\n| `-e JAVA_OPTS=` | For passing additional java options. |\n| `-v /config` | Configuration file location. |\n| `-v /music` | Location of music. |\n| `-v /playlists` | Location for playlists to be saved to. |\n| `-v /podcasts` | Location of podcasts. |\n| `-v /media` | Location of other media. |\n| `--device /dev/snd` | Only needed to pass your host sound device to Airsonic's Java jukebox player. |\n\n## Environment variables from files (Docker secrets)\n\nYou can set any environment variable from a file by using a special prepend `FILE__`.\n\nAs an example:\n\n```bash\n-e FILE__PASSWORD=/run/secrets/mysecretpassword\n```\n\nWill set the environment variable `PASSWORD` based on the contents of the `/run/secrets/mysecretpassword` file.\n\n## Umask for running applications\n\nFor all of our images we provide the ability to override the default umask settings for services started within the containers using the optional `-e UMASK=022` setting.\nKeep in mind umask is not chmod it subtracts from permissions based on it's value it does not add. Please read up [here](https://en.wikipedia.org/wiki/Umask) before asking for support.\n\n## User / Group Identifiers\n\nWhen using volumes (`-v` flags) permissions issues can arise between the host OS and the container, we avoid this issue by allowing you to specify the user `PUID` and group `PGID`.\n\nEnsure any volume directories on the host are owned by the same user you specify and any permissions issues will vanish like magic.\n\nIn this instance `PUID=1000` and `PGID=1000`, to find yours use `id user` as below:\n\n```bash\n  $ id username\n    uid=1000(dockeruser) gid=1000(dockergroup) groups=1000(dockergroup)\n```\n\n## Docker Mods\n\n[![Docker Mods](https://img.shields.io/badge/dynamic/yaml?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=airsonic-advanced&query=%24.mods%5B%27airsonic-advanced%27%5D.mod_count&url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml)](https://mods.linuxserver.io/?mod=airsonic-advanced \"view available mods for this container.\") [![Docker Universal Mods](https://img.shields.io/badge/dynamic/yaml?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=universal&query=%24.mods%5B%27universal%27%5D.mod_count&url=https%3A%2F%2Fraw.githubusercontent.com%2Flinuxserver%2Fdocker-mods%2Fmaster%2Fmod-list.yml)](https://mods.linuxserver.io/?mod=universal \"view available universal mods.\")\n\nWe publish various [Docker Mods](https://github.com/linuxserver/docker-mods) to enable additional functionality within the containers. The list of Mods available for this image (if any) as well as universal mods that can be applied to any one of our images can be accessed via the dynamic badges above.\n\n## Support Info\n\n* Shell access whilst the container is running: `docker exec -it airsonic-advanced /bin/bash`\n* To monitor the logs of the container in realtime: `docker logs -f airsonic-advanced`\n* container version number\n  * `docker inspect -f '{{ index .Config.Labels \"build_version\" }}' airsonic-advanced`\n* image version number\n  * `docker inspect -f '{{ index .Config.Labels \"build_version\" }}' lscr.io/linuxserver/airsonic-advanced:latest`\n\n## Updating Info\n\nMost of our images are static, versioned, and require an image update and container recreation to update the app inside. With some exceptions (ie. nextcloud, plex), we do not recommend or support updating apps inside the container. Please consult the [Application Setup](https://github.com/cryptoandcoffee/akash-linuxserver/blob/cached-sha/airsonic-advanced/#application-setup) section above to see if it is recommended for the image.\n\nBelow are the instructions for updating containers:\n\n### Via Docker Compose\n\n* Update all images: `docker-compose pull`\n  * or update a single image: `docker-compose pull airsonic-advanced`\n* Let compose update all containers as necessary: `docker-compose up -d`\n  * or update a single container: `docker-compose up -d airsonic-advanced`\n* You can also remove the old dangling images: `docker image prune`\n\n### Via Docker Run\n\n* Update the image: `docker pull lscr.io/linuxserver/airsonic-advanced:latest`\n* Stop the running container: `docker stop airsonic-advanced`\n* Delete the container: `docker rm airsonic-advanced`\n* Recreate a new container with the same docker run parameters as instructed above (if mapped correctly to a host folder, your `/config` folder and settings will be preserved)\n* You can also remove the old dangling images: `docker image prune`\n\n### Via Watchtower auto-updater (only use if you don't remember the original parameters)\n\n* Pull the latest image at its tag and replace it with the same env variables in one run:\n\n  ```bash\n  docker run --rm \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  containrrr/watchtower \\\n  --run-once airsonic-advanced\n  ```\n\n* You can also remove the old dangling images: `docker image prune`\n\n**Note:** We do not endorse the use of Watchtower as a solution to automated updates of existing Docker containers. In fact we generally discourage automated updates. However, this is a useful tool for one-time manual updates of containers where you have forgotten the original parameters. In the long term, we highly recommend using [Docker Compose](https://docs.linuxserver.io/general/docker-compose).\n\n### Image Update Notifications - Diun (Docker Image Update Notifier)\n\n* We recommend [Diun](https://crazymax.dev/diun/) for update notifications. Other tools that automatically update containers unattended are not recommended or supported.\n\n## Building locally\n\nIf you want to make local modifications to these images for development purposes or just to customize the logic:\n\n```bash\ngit clone https://github.com/linuxserver/docker-airsonic-advanced.git\ncd docker-airsonic-advanced\ndocker build \\\n  --no-cache \\\n  --pull \\\n  -t lscr.io/linuxserver/airsonic-advanced:latest .\n```\n\nThe ARM variants can be built on x86_64 hardware using `multiarch/qemu-user-static`\n\n```bash\ndocker run --rm --privileged multiarch/qemu-user-static:register --reset\n```\n\nOnce registered you can define the dockerfile to use with `-f Dockerfile.aarch64`.\n\n## Versions\n\n* **30.05.23:** - Rebase to Alpine 3.18.\n* **11.02.23:** - Rebase to Alpine 3.17.\n* **23.10.22:** - Rebase to Alpine 3.16, migrate to s6v3.\n* **25.07.22:** - Add vorbis-tools.\n* **02.01.22:** - Initial Release.\n",
        "deploy": "version: \"2.0\"\n\nservices:\n  airsonic-advanced:\n    image: linuxserver/airsonic-advanced\n    expose:\n      - port: 4040\n        as: 4040\n        to:\n          - global: true\n      - port: 80\n        as: 80\n        to:\n          - global: true\n\n    env:\n      - CONTEXT_PATH=\n      - PASSWORD=ff06ff28e92b975c5b6745d3ff088422\n      - JAVA_OPTS=\n      - JAVA_OPTS=\"-Xmx256m\n      - PGID=1000\n      - PUID=1000\n      - TZ=Etc/UTC\n\nprofiles:\n  compute:\n    airsonic-advanced:\n      resources:\n        cpu:\n          units: 4.0\n        memory:\n          size: 2.5Gi\n        storage:\n          size: 32Gi\n  placement:\n    akash:\n      signedBy:\n        anyOf:\n          - \"akash1365yvmc4s7awdyj3n2sav7xfx76adc6dnmlx63\"\n          - \"akash18qa2a2ltfyvkyj0ggj3hkvuj6twzyumuaru9s4\"\n      pricing:\n        airsonic-advanced:\n          denom: uakt\n          amount: 100000\ndeployment:\n  airsonic-advanced:\n    akash:\n      profile: airsonic-advanced\n      count: 1\n",
        "persistentStorageEnabled": false,
        "githubUrl": "https://github.com/cryptoandcoffee/akash-linuxserver/blob/cached-sha/airsonic-advanced"
      }
    ]
  }
]
